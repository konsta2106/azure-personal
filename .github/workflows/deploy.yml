name: Deploy to Azure

on:
  push:
    branches:
      - main

env:
  FUNCTIONAPP_PACKAGE_PATH: 'functionapp'       # set this to the path to your function app project, defaults to the repository root
  NODE_VERSION: '20.x'                      # set this to the node version to use (e.g. '8.x', '10.x', '12.x')

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Deploy infrastructure
      run: |
        az group create --name ${{ secrets.AZURE_RESOURCE_GROUP }} --location ${{ secrets.AZURE_LOCATION }}
        az deployment group create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --template-file infra/azureResourcesTemplate.json --parameters storageAccountName=${{ secrets.STORAGE_ACCOUNT_NAME }} cosmosDbAccountName=${{ secrets.COSMOS_DB_ACCOUNT_NAME }} appServicePlanName=${{ secrets.APP_SERVICE_PLAN_NAME }} functionAppName=${{ secrets.FUNCTION_APP_NAME }} appInsightsName=${{ secrets.APP_INSIGHTS_NAME }} databaseName=${{ secrets.DATABASE_NAME }} fuelContainerName=${{ secrets.FUEL_CONTAINER_NAME }} skillsContainerName=${{ secrets.SKILLS_CONTAINER_NAME }}

    - name: Install Azure Functions Core Tools
      run: |
        npm install -g azure-functions-core-tools@4 --unsafe-perm true

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        pushd './${{ env.FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ secrets.FUNCTION_APP_NAME }}
        package: ${{ env.FUNCTIONAPP_PACKAGE_PATH }}