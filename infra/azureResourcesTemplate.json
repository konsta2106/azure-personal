{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[resourceGroup().location]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('fuelContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('fuelContainerName')]",
          "partitionKey": {
            "paths": [
              "/timestamp"
            ],
            "kind": "Hash"
          }
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmosDbAccountName'), '/', parameters('databaseName'), '/', parameters('cvContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cvContainerName')]",
          "partitionKey": {
            "paths": [
              "/entityType"
            ],
            "kind": "Hash"
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": false,
        "isXenon": false,
        "hyperV": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "MyAccount_COSMOSDB",
                "value": "[concat('AccountEndpoint=https://', parameters('cosmosDbAccountName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-04-15').primaryMasterKey)]"
            },
            {
              "name": "DATABASE_NAME",
              "value": "[parameters('databaseName')]"
            },
            {
              "name": "FUEL_CONTAINER_NAME",
              "value": "[parameters('fuelContainerName')]"
            },
            {
              "name": "CV_CONTAINER_NAME", 
              "value": "[parameters('cvContainerName')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-08-01",
      "name": "[parameters('apimServiceName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Developer",
        "capacity": 1
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName'))]"
      ],
      "properties": {
        "displayName": "CV API",
        "description": "Complete CV management API with versioning support",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "state": "published"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "displayName": "CV API v1",
        "description": "CV management API with full CRUD operations for all CV entities",
        "serviceUrl": "[concat('https://', parameters('functionAppName'), '.azurewebsites.net/api')]",
        "path": "cv/v1",
        "protocols": ["https"],
        "subscriptionRequired": true
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/get-skills')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "displayName": "Get All Skills",
        "method": "GET",
        "urlTemplate": "/skills",
        "description": "Retrieve all skills"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/get-skill-by-id')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "displayName": "Get Skill by ID",
        "method": "GET",
        "urlTemplate": "/skills/{skillId}",
        "description": "Retrieve a specific skill by ID",
        "templateParameters": [
          {
            "name": "skillId",
            "description": "Skill identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/create-skill')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "displayName": "Create Skill",
        "method": "POST",
        "urlTemplate": "/skills",
        "description": "Create a new skill"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/update-skill')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "displayName": "Update Skill",
        "method": "PUT",
        "urlTemplate": "/skills/{skillId}",
        "description": "Update an existing skill",
        "templateParameters": [
          {
            "name": "skillId",
            "description": "Skill identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/delete-skill')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "displayName": "Delete Skill",
        "method": "DELETE",
        "urlTemplate": "/skills/{skillId}",
        "description": "Delete a skill",
        "templateParameters": [
          {
            "name": "skillId",
            "description": "Skill identifier",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/cv')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimServiceName'), 'cv')]",
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('apimServiceName'), '/cv/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'cv')]"
      ],
      "properties": {
        "value": "<policies><inbound><base /><check-header name=\"Ocp-Apim-Subscription-Key\" failed-check-httpcode=\"401\" failed-check-error-message=\"Subscription key required\" ignore-case=\"false\" /><cors allow-credentials=\"false\"><allowed-origins><origin>*</origin></allowed-origins><allowed-methods><method>GET</method><method>POST</method><method>PUT</method><method>DELETE</method><method>OPTIONS</method></allowed-methods><allowed-headers><header>*</header></allowed-headers></cors></inbound><backend><base /></backend><outbound><base /></outbound><on-error><base /></on-error></policies>",
        "format": "xml"
      }
    }
  ],
  "parameters": {
    "storageAccountName": {
      "type": "string"
    },
    "cosmosDbAccountName": {
      "type": "string"
    },
    "appServicePlanName": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "databaseName": {
      "type": "string"
    },
    "fuelContainerName": {
      "type": "string"
    },
    "cvContainerName": {
      "type": "string",
      "defaultValue": "cv-data"
    },
    "apimServiceName": {
      "type": "string"
    },
    "publisherEmail": {
      "type": "string"
    },
    "publisherName": {
      "type": "string"
    }
  }
}